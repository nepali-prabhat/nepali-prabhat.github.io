---
import type { CollectionEntry } from "astro:content";
import Pagination from "@/components/Paginator.astro";
import PostPreview from "@/components/blog/PostPreview.astro";
import { getAllPosts, getUniqueTags, groupPostsByYear, sortMDByDate } from "@/data/post";
import PageLayout from "@/layouts/Base.astro";
import type { GetStaticPaths, Page } from "astro";

export const getStaticPaths = (async ({ paginate }) => {
	const MAX_POSTS_PER_PAGE = 10;
	const allPosts = await getAllPosts();
	const allPostsByDate = sortMDByDate(allPosts);
	const uniqueTags = getUniqueTags(allPosts);
	return paginate(allPostsByDate, { pageSize: MAX_POSTS_PER_PAGE, props: { uniqueTags } });
}) satisfies GetStaticPaths;

interface Props {
	page: Page<CollectionEntry<"post">>;
	uniqueTags: string[];
}

const { page, uniqueTags } = Astro.props;

const meta = {
	description: "Read my collection of posts and the things that interest me",
	title: "Posts",
};

const paginationProps = {
	...(page.url.prev && {
		prevUrl: {
			text: "← Previous Page",
			url: page.url.prev,
		},
	}),
	...(page.url.next && {
		nextUrl: {
			text: "Next Page →",
			url: page.url.next,
		},
	}),
};

const groupedByYear = groupPostsByYear(page.data);
const descYearKeys = Object.keys(groupedByYear).sort((a, b) => +b - +a);
---

<PageLayout meta={meta}>
  <h1 class="title mb-6">Posts</h1>
	<div class="grid sm:grid-rows-[1fr_3fr]">
		{
			!!uniqueTags.length && (
				<aside>
					<ul class="flex flex-wrap gap-2 items-center">
						{uniqueTags.map((tag) => (
							<li>
								<a
									aria-label={`View all posts with the tag: ${tag}`}
									class="flex items-center justify-center rounded-lg bg-accent text-bgColor  p-1"
									href={`/tags/${tag}/`}
								>
									{tag}
								</a>
							</li>
						))}
					<span>
						<a aria-label="View all blog categories" class="sm:hover:text-accent" href="/tags/">
							all tags {"->"}
						</a>
					</span>
					</ul>
				</aside>
			)
		}
		<section aria-label="Blog post list">
			{
				descYearKeys.map((yearKey) => (
					<>
						<h2 class="title text-lg">{yearKey}</h2>
						<ul class="mb-8 space-y-8 text-start">
							{groupedByYear[yearKey]?.map((p) => (
								<li class="grid gap-2 sm:grid-cols-[auto_1fr] sm:[&_q]:col-start-2">
									<PostPreview post={p} />
								</li>
							))}
						</ul>
					</>
				))
			}
			<Pagination {...paginationProps} />
		</section>
	</div>
</PageLayout>
